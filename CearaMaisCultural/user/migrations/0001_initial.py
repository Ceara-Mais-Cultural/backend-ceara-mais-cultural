# Generated by Django 4.2.13 on 2024-06-10 19:46

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('neighborhood', '__first__'),
        ('city', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[django.core.validators.RegexValidator('^[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]{2}$', message='CPF inválido')])),
                ('full_name', models.CharField(max_length=100, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('community', models.TextField(blank=True, null=True, validators=[django.core.validators.MaxLengthValidator(100)])),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('city', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='city.city')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('neighborhood', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='neighborhood.neighborhood')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
                'ordering': ['full_name'],
            },
        ),
    ]
